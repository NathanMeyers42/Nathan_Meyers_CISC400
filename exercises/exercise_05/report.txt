The click even stores the mouse position (adjusted for the dimentions and coordinate system of the gl context within the canvas) into an array, then rerenders the canvas using the points in the array.
I added randomization to each of the points, which changes each time a point is added and the canvas rendered. To fix this, I would create a second array and store a randomized point size corresponding to each point position stored in the other array.
If I don't clear the canvas explicitly, the canvas is cleared anyway but with a white background. If this weren't the case, each drawn point would appear to retain its maximum randomized point size.